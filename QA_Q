#include "MyCharacter.h"
#include "GameFramework/CharacterMovementComponent.h"
#include "GameFramework/Controller.h"

AMyCharacter::AMyCharacter()
{
    PrimaryActorTick.bCanEverTick = true;

    bIsFlying = false;
}

void AMyCharacter::BeginPlay()
{
    Super::BeginPlay();
}

void AMyCharacter::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
    Super::SetupPlayerInputComponent(PlayerInputComponent);

    PlayerInputComponent->BindAxis("MoveForward", this, &AMyCharacter::MoveForward);
    PlayerInputComponent->BindAxis("MoveRight", this, &AMyCharacter::MoveRight);
    PlayerInputComponent->BindAxis("FlyUp", this, &AMyCharacter::FlyUp);

    PlayerInputComponent->BindAction("ToggleFly", IE_Pressed, this, &AMyCharacter::ToggleFlyMode);
}

void AMyCharacter::ToggleFlyMode()
{
    bIsFlying = !bIsFlying;

    if (bIsFlying)
    {
        GetCharacterMovement()->SetMovementMode(EMovementMode::MOVE_Flying);
    }
    else
    {
        GetCharacterMovement()->SetMovementMode(EMovementMode::MOVE_Walking);
    }
}

void AMyCharacter::MoveForward(float Value)
{
    if (Controller && Value != 0.0f)
    {
        const FRotator Rotation = Controller->GetControlRotation();
        const FRotator YawRotation(0, Rotation.Yaw, 0);
        const FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);
        AddMovementInput(Direction, Value);
    }
}

void AMyCharacter::MoveRight(float Value)
{
    if (Controller && Value != 0.0f)
    {
        const FRotator Rotation = Controller->GetControlRotation();
        const FRotator YawRotation(0, Rotation.Yaw, 0);
        const FVector Direction = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::Y);
        AddMovementInput(Direction, Value);
    }
}

void AMyCharacter::FlyUp(float Value)
{
    if (bIsFlying && Value != 0.0f)
    {
        AddMovementInput(FVector::UpVector, Value);
    }
}
This is just a random code for the testing
